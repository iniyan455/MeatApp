apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-parcelize'

apply from: rootProject.file("product-flavours.gradle")

android {
    compileSdkVersion DefaultConfig.compileSdk

    defaultConfig {
        minSdkVersion DefaultConfig.minSdk
        targetSdkVersion DefaultConfig.targetSdk
        versionCode Releases.versionCode
        versionName Releases.versionName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.java_version.toString()
        useIR = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = rootProject.ext.compose_version.toString()
    }

    buildFeatures {
        compose true
        buildConfig = true
        viewBinding = true
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }


    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("int", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
        }
        stage {
            ext.enableCrashlytics = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("int", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
            //resValue "string", "app_version", "${defaultConfig.versionName} (build ${defaultConfig.versionCode} .stage)"

        }
        minifiedDebug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("int", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
            //resValue "string", "app_version", "${defaultConfig.versionName} (build ${defaultConfig.versionCode} .minifiedDebug)"

        }
    }

    kapt {
        correctErrorTypes = true
    }

}

dependencies {

    implementation Libs.core_ktx
    implementation Libs.appcompat
    implementation Libs.material
    implementation Libs.constraintlayout

    // Coroutines
    implementation Libs.coroutines_core
    implementation Libs.coroutines_android

    // Coroutine Lifecycle Scopes
    implementation Libs.lifecycle_viewmodel
    implementation Libs.lifecycle_runtime

    //Dagger - Hilt
    implementation Libs.dagger_hilt
    kapt Libs.dagger_kapt_runtime
    implementation Libs.dagger_hilt_lifecycle
    kapt Libs.dagger_kapt_compiler

    // compose
    implementation Libs.compose_ui
    implementation Libs.material
    implementation Libs.compose_preview
    androidTestImplementation Libs.compose_junit
    debugImplementation Libs.compose_tooling
    implementation Libs.activity_compose

    implementation Libs.compose_navigation

    implementation Libs.lottie

    implementation Libs.glide
    kapt Libs.glide_compiler

    // Gif image Drawables
    implementation Libs.gif

    testImplementation Libs.junit
    testImplementation Libs.mockk

    androidTestImplementation Libs.junit_ext
    androidTestImplementation Libs.expresso

    implementation Libs.timber
    debugImplementation Libs.leakcanary_android
}

